# AWS Environment Variables Template for Production Deploy
# Copy this file to .env.aws and fill in your actual values

# =============================================================================
# STAGE & ENVIRONMENT CONFIGURATION
# =============================================================================
STAGE=dev
NODE_ENV=production

# =============================================================================
# AWS CONFIGURATION (REQUIRED)
# =============================================================================
# Replace with your AWS region (us-east-1 recommended)
AWS_DEFAULT_REGION=us-east-1
AWS_REGION=us-east-1

# Replace with your AWS Account ID (12-digit number)
# Get it by running: aws sts get-caller-identity --query Account --output text
AWS_ACCOUNT_ID=123456789012

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
DEFAULT_MEMORY=256
DEFAULT_TIMEOUT=30
API_COMPRESSION=1024
SQS_VISIBILITY_TIMEOUT=360
SQS_MAX_RECEIVE=3
SQS_LONG_POLLING=20
API_RATE_LIMIT=100
API_BURST_LIMIT=200

# =============================================================================
# EVENTBRIDGE CONFIGURATION
# =============================================================================
EVENT_BUS_NAME=default

# =============================================================================
# RESOURCE TAGGING (OPTIONAL)
# =============================================================================
# Tags for cost tracking and resource management
OWNER=Backend-Team
COST_CENTER=Medical-Apps

# =============================================================================
# RDS MYSQL CONFIGURATION
# =============================================================================
# Note: In AWS deployment, these values are usually managed by Secrets Manager
# Leave empty to use Secrets Manager or provide specific values for testing

# Peru Database Configuration
DB_HOST_PE=
DB_PORT_PE=3306
DB_NAME_PE=appointments_pe
DB_USER_PE=
DB_PASSWORD_PE=

# Chile Database Configuration  
DB_HOST_CL=
DB_PORT_CL=3306
DB_NAME_CL=appointments_cl
DB_USER_CL=
DB_PASSWORD_CL=

# =============================================================================
# AWS SECRETS MANAGER (AUTO-CREATED DURING DEPLOYMENT)
# =============================================================================
# These are automatically created during deployment - leave empty
DB_SECRET_ARN_PE=
DB_SECRET_ARN_CL=

# =============================================================================
# SNS/SQS RESOURCES (AUTO-CREATED DURING DEPLOYMENT)
# =============================================================================
# These are automatically created and referenced during deployment - leave empty
SNS_TOPIC_ARN=
SQS_PE_URL=
SQS_CL_URL=
SQS_COMPLETION_URL=

# =============================================================================
# DYNAMODB CONFIGURATION (AUTO-CREATED DURING DEPLOYMENT)
# =============================================================================
# This table is automatically created during deployment
APPOINTMENTS_TABLE=medical-appointments-api-appointments-dev

# =============================================================================
# DEPLOYMENT INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.aws.example .env.aws
# 2. Replace AWS_ACCOUNT_ID with your actual 12-digit AWS Account ID
# 3. Optionally modify STAGE (dev/qa/prod) and other settings
# 4. Run deployment: pnpm run deploy:dev
# 
# The Serverless Framework will automatically create and configure:
# - SNS topics and SQS queues
# - DynamoDB table
# - Lambda functions with proper IAM roles
# - API Gateway endpoints
# - EventBridge rules
#
# For production deployments:
# - Set STAGE=prod
# - Set NODE_ENV=production  
# - Configure proper RDS credentials via AWS Secrets Manager
# - Review and adjust performance settings
#
# For local development, use .env file instead with LocalStack configuration