services:
  localstack:
    container_name: '${LOCALSTACK_DOCKER_NAME:-localstack-main}'
    image: localstack/localstack:latest
    ports:
      - '127.0.0.1:4566:4566' # LocalStack Gateway
      - '127.0.0.1:4510-4559:4510-4559' # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - SERVICES=dynamodb,sns,sqs,events,ssm,secretsmanager
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - PERSISTENCE=${PERSISTENCE:-0}
      # AWS Configuration
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - '${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # MySQL para testing local
  mysql-pe:
    image: mysql:8.0
    container_name: mysql-pe
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: appointments_pe
      MYSQL_USER: appointments
      MYSQL_PASSWORD: appointments123
    ports:
      - '3307:3306'
    volumes:
      - mysql_pe_data:/var/lib/mysql
      - ./scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql

  mysql-cl:
    image: mysql:8.0
    container_name: mysql-cl
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: appointments_cl
      MYSQL_USER: appointments
      MYSQL_PASSWORD: appointments123
    ports:
      - '3308:3306'
    volumes:
      - mysql_cl_data:/var/lib/mysql
      - ./scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  mysql_pe_data:
  mysql_cl_data:
